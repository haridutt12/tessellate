# This file is a template, and might need editing before it works on your project.
image: registry.gitlab.com/tsocial/docker-images/golang-pipeline-runner:latest

services:
    - name: docker:dind
    - name: consul:1.2.0

stages:
    - test
    - build
    - release

variables:
  STAGING_REGISTRY: "registry.gitlab.com"
  PRODUCTION_REGISTRY: $STAGING_REGISTRY
  CONTAINER_TEST_IMAGE: ${STAGING_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  CONTAINER_RELEASE_IMAGE: ${STAGING_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  CONTAINER_LATEST_IMAGE: ${STAGING_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
  CONSUL: "consul:8500"

  REPO_NAME: gitlab.com/tsocial/sre/tessellate

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.

before_script:
    # Debug container's infos in Gitlab
    - echo $CONTAINER_TEST_IMAGE
    - echo $CONTAINER_RELEASE_IMAGE
    - echo $CONTAINER_LATEST_IMAGE

    - make protodep
    - export PROTO_VERSION=3.5.1
    - export PATH="/tmp/proto/${PROTO_VERSION}/bin/":$PATH
    
    # Debug
    - pwd
    - echo $PATH
    - echo $GOPATH
    - ls /builds/tsocial/sre/tessellate

    - mkdir -p $GOPATH/src/gitlab.com/tsocial/sre
    - cp -R /builds/tsocial/sre/tessellate $GOPATH/src/gitlab.com/tsocial/sre
    - cd $GOPATH/src/gitlab.com/tsocial/sre/tessellate

    # - make build_deps

test::unit_test:
    stage: test
    script:
        - cd $GOPATH/src/gitlab.com/tsocial/sre/tessellate
        - make test
    
build::image:
    stage: build
    script:
        - cd $GOPATH/src/gitlab.com/tsocial/sre/tessellate
        - make worker_build
        - make http_build
        - make cli_build
        - make tessellate_build
        - make build_images

        # Gitlab Registry | build, push
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $STAGING_REGISTRY
        - docker build --pull -t $CONTAINER_TEST_IMAGE .
        - docker push $CONTAINER_TEST_IMAGE
    # only:
    #     - develop
    #     - master

release::latest:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $STAGING_REGISTRY
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_LATEST_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
    # only:
    #     - develop
    #     - master

#deploy:
#    stage: deploy
#    script:
#        - make upload_images
#    only:
#        - master